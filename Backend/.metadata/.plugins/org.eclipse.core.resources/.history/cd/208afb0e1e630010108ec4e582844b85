package com.auto.technician.dashboard.service;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import com.auto.technician.dashboard.clients.TechnicianClient;
import com.auto.technician.dashboard.dto.FeignEmailRequestDto;
import com.auto.technician.dashboard.dto.PostingDTO;
import com.auto.technician.dashboard.dto.TechnicianDto;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class TechnicianDashboardService {
	
    private final TechnicianClient technicianClient;

	

	public ResponseEntity<?> getAcceptedPosts(FeignEmailRequestDto dto) {
        TechnicianDto technician = technicianClient.getTechnicianByEmail(dto);
        if (technician == null) {
            return ResponseEntity.status(404).body("Technician not found.");
        }
        
         List<Long> acceptedPostIds = technicianClient.getAcceptedPostsByEmail(dto);
         if (acceptedPostIds == null || acceptedPostIds.isEmpty()) {
             return ResponseEntity.ok("No accepted posts found for this technician.");
         }

         // Step 3: Fetch All Posts
         List<PostingDTO> allPostings = technicianClient.getAllPostingsFromPostingsService(dto);

         // Step 4: Filter Only Accepted Posts
         List<PostingDTO> acceptedPosts = allPostings.stream()
                 .filter(p -> acceptedPostIds.contains(p.getId()))
                 .map(p -> {
                     if (p.getStatus() != null && p.getStatus().equalsIgnoreCase("Pending")) {
                         p.setStatus("ACCEPTED"); // âœ… update status inline
                     }
                     return p;
                 })
                 .collect(Collectors.toList());

         return ResponseEntity.ok(acceptedPosts);
         


	}
	
	public ResponseEntity<?>  onAcceptedDealerSidePostUpdate(List<PostingDTO> acceptedPosts) {
		
		
		 if (acceptedPosts == null || acceptedPosts.isEmpty()) return ResponseEntity.status(404).body("No Posts Accepted Yet.");

		    for (PostingDTO post : acceptedPosts) {
		        if (post.getStatus() != null && post.getStatus().equalsIgnoreCase("Pending")) {
		            post.setStatus("ACCEPTED"); 
		            
		            
		        }
		    }
		
		    return ResponseEntity.ok(acceptedPosts);
		
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

}
